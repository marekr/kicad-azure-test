# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  dockerId: my-docker-id  # Replace with your Docker ID for Docker Hub or the admin user name for the Azure Container Registry
  imageName: my-image-name  # Replace with the name of the image you want to publish

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: echo hello from Linux
    displayName: 'Run a one-line script lin'
- job: macOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - script: echo hello from macOS
    displayName: 'Run a one-line script mac'
- job: Windows
  pool:
    vmImage: 'win1803'
  steps:
  - script: |
      echo hello from win
      echo helloe from win line two
      REM docker run microsoft/dotnet-samples:dotnetapp-nanoserver-1803
      docker build -t test .
    displayName: 'Run a two-line script msw'
- job: KiCad_Winbuilder
  pool:
    vmImage: 'win1803'
  steps:
  - powershell: |
      Invoke-WebRequest https://cmake.org/files/v3.14/cmake-3.14.4-win64-x64.zip -OutFile C:\cmake-3.14.4-win64-x64.zip
      Expand-Archive C:\cmake-3.14.4-win64-x64.zip -DestinationPath C:\
      Rename-Item -Path C:\cmake-3.14.0-win64-x64 -NewName C:\cmake
      Write-Host "##vso[task.prependpath]C:\cmake\bin"
      displayName: 'Install CMake 3.14'
  - script: cmake --version
  - script: |
      git clone https://github.com/KiCad/kicad-winbuilder.git
      cd kicad-winbuilder
      REM set
      echo truing cpack
      dir ./.ci
      REM C:\Program Files\CMake\bin\cpack.exe
      REM make_x86_64.bat
    displayName: 'Attempting to build kicad-winbuilder'
